{"version":3,"sources":["../src/extractor.js"],"names":["Translation","filename","lineNumber","msg","item","Item","msgid","msgctxt","references","msgid_plural","msgstr","extractedComments","Extractor","options","startDelim","endDelim","attributes","translations","content","$","load","decodeEntities","withStartIndices","map","i","el","node","extractTranslationMessage","truncatedText","substr","startIndex","split","length","bind","get","concat","attr","re","RegExp","matches","exec","pofile","headers","itemMapping","translation","toPofileItem","oldItem","indexOf","push","soldItem","items","sort","a","b","localeCompare","toPofile","toString"],"mappings":"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","file":"extractor.js","sourcesContent":["import cheerio from 'cheerio'\nimport Pofile from 'pofile'\n\n\nclass Translation {\n  constructor(filename, lineNumber, msg) {\n    this.filename = filename\n    this.lineNumber = lineNumber\n    this.msg = msg\n  }\n\n  toPofileItem() {\n    const item = new Pofile.Item()\n    item.msgid = this.msg\n    item.msgctxt = null\n    item.references = [`${this.filename}:${this.lineNumber}`];\n    item.msgid_plural = null\n    item.msgstr = []\n    item.extractedComments = []\n    return item\n  }\n}\n\n\nexport default class Extractor {\n\n  constructor(options) {\n    this.options = Object.assign({\n      startDelim: '{{',\n      endDelim: '}}',\n      attributes: ['v-text'],\n    }, options)\n    this.translations = []\n  }\n\n  parse(filename, content) {\n    const $ = cheerio.load(content, {\n      decodeEntities: false,\n      withStartIndices: true,\n    })\n\n    const translations = $('template *').map(function (i, el) {\n      const node = $(el)\n      const msg = this.extractTranslationMessage(node)\n      if (msg) {\n        const truncatedText = content.substr(0, el.startIndex)\n        const lineNumber = truncatedText.split(/\\r\\n|\\r|\\n/).length\n        return new Translation(filename, lineNumber, msg)\n      }\n    }.bind(this)).get()\n\n    this.translations = this.translations.concat(translations)\n  }\n\n  extractTranslationMessage(node) {\n    // extract from attributes\n    for (let attr of this.options.attributes) {\n        if (node.attr(attr)) {\n          const content = node.attr(attr)\n\n          // match text with format $t([string literal]) \n          const re = new RegExp('.*\\\\$t\\\\([\\'\\\"\\`](.*)[\\'\\\"\\`]\\\\).*')\n          const matches = re.exec(content)\n\n          if (matches) {\n            return matches[1]\n          }\n        }\n      }\n  }\n\n  toPofile() {\n    const pofile = new Pofile()\n    pofile.headers = {\n      'Last-Translator': 'vue-i18n-xgettext',\n      'Content-Type': 'text/plain; charset=UTF-8',\n      'Content-Transfer-Encoding': '8bit',\n      'MIME-Version': '1.1',\n    }\n\n    const itemMapping = {}\n    for (let translation of this.translations) {\n      const item = translation.toPofileItem()\n      if (!itemMapping[item.msgid]) {\n        itemMapping[item.msgid] = item\n      } else {\n        const oldItem = itemMapping[item.msgid]\n        // TODO: deal with plurals/context\n        if (item.references.length && oldItem.references.indexOf(item.references[0]) === -1) {\n          oldItem.references.push(item.references[0])\n        }\n        if (item.extractedComments.length && soldItem.extractedComments.indexOf(item.extractedComments[0]) === -1) {\n          oldItem.extractedComments.push(item.extractedComments[0])\n        }\n      } \n    }\n\n    for (let msgid in itemMapping) {\n      const item = itemMapping[msgid]\n      pofile.items.push(item)\n    }\n\n    pofile.items.sort((a, b) => a.msgid.localeCompare(b.msgid))\n    return pofile\n  }\n\n  toString() {\n    return this.toPofile().toString()\n  }\n}\n\n"]}